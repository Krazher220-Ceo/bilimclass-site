import requests
import os
from flask import Flask, render_template, request, session
from datetime import datetime, timedelta

app = Flask(__name__, template_folder="templates")
app.secret_key = "supersecretkey"  # –î–ª—è —Å–µ—Å—Å–∏–π

# üîπ API-—Ç–æ–∫–µ–Ω –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏
TOKEN = os.getenv("TOKEN")
HEADERS = {"Authorization": f"Bearer {TOKEN}"}

# üîπ –î–∞–Ω–Ω—ã–µ –¥–ª—è API
SCHOOL_ID = "1006693"
EDU_YEAR = "2024"
STUDENT_GROUP_UUID = "2666df86-ee3e-4d22-aa76-052f3fedf057"

# üîπ URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –î–ó –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
HOMEWORK_URL = f"https://api.bilimclass.kz/api/v4/os/clientoffice/homeworks/monthly/list?schoolId={SCHOOL_ID}&eduYear={EDU_YEAR}&studentGroupUuid={STUDENT_GROUP_UUID}"
SCHEDULE_URL = f"https://api.bilimclass.kz/api/v4/os/clientoffice/timetable/daily/list?schoolId={SCHOOL_ID}&eduYear={EDU_YEAR}&studentGroupUuid={STUDENT_GROUP_UUID}"

def get_homework():
    """üîπ –ü–æ–ª—É—á–∞–µ—Ç –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —Å API BilimClass"""
    response = requests.get(HOMEWORK_URL, headers=HEADERS)

    print("üìå –û—Ç–≤–µ—Ç API (–î–ó):", response.text)  # –í–ê–ñ–ù–û: —Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç
    
    try:
        data = response.json()
        return data.get("data", [])  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON:", e)
        return []

def get_schedule(date):
    """üîπ –ü–æ–ª—É—á–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É"""
    try:
        response = requests.get(SCHEDULE_URL + f"&date={date}", headers=HEADERS)
        data = response.json()
        if isinstance(data, dict) and "data" in data:
            return [lesson["subjectName"] for lesson in data["data"]]
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON (—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ):", e)
    return []

@app.route("/", methods=["GET", "POST"])
def index():
    homeworks = get_homework()

    if not homeworks:
        return "‚ùå –û—à–∏–±–∫–∞: API –Ω–µ –≤–µ—Ä–Ω—É–ª–æ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ!", 500

    # üîπ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –î–ó
    subjects = sorted(set(hw["subjectName"] for hw in homeworks if "subjectName" in hw))

    # üîπ –î–∞—Ç—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    today = datetime.today().strftime("%d.%m.%Y")
    yesterday = (datetime.today() - timedelta(days=1)).strftime("%d.%m.%Y")
    tomorrow = (datetime.today() + timedelta(days=1)).strftime("%d.%m.%Y")

    # üîπ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –î–ó
    homeworks_today = [hw["content"] for hw in homeworks if hw.get("date") == today]
    homeworks_yesterday = [hw["content"] for hw in homeworks if hw.get("date") == yesterday]

    # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞
    subjects_tomorrow = {hw["subjectName"]: hw["date"] == tomorrow for hw in homeworks}

    # üîπ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –î–ó –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É
    selected_subject = request.form.get("subject")
    filtered_homeworks = [
        hw["content"] for hw in homeworks if hw.get("subjectName") == selected_subject
    ] if selected_subject else []

    # üîπ –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
    schedule_tomorrow = get_schedule(tomorrow)

    # üîπ –°—á–∏—Ç–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã
    session["views"] = session.get("views", 0) + 1

    return render_template(
        "index.html",
        subjects=subjects_tomorrow,
        selected_subject=selected_subject,
        homeworks=filtered_homeworks,
        homeworks_today=homeworks_today,
        homeworks_yesterday=homeworks_yesterday,
        schedule_tomorrow=schedule_tomorrow,
        views=session["views"]
    )

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)











